[package]
name = "gst-plugin-webrtc"
version.workspace = true
edition.workspace = true
authors = ["Mathieu Duponchelle <mathieu@centricular.com>", "Thibault Saunier <tsaunier@igalia.com>"]
license = "MPL-2.0"
description = "GStreamer plugin for high level WebRTC elements and a simple signaling server"
repository.workspace = true
rust-version.workspace = true

[dependencies]
gst = { workspace = true, features = ["v1_22", "serde"] }
gst-app = { workspace = true, features = ["v1_22"] }
gst-audio = { workspace = true, features = ["v1_22", "serde"] }
gst-video = { workspace = true, features = ["v1_22", "serde"] }
gst-net = { workspace = true, features = ["v1_22"] }
gst-webrtc = { workspace = true, features = ["v1_22"] }
gst-sdp = { workspace = true, features = ["v1_22"] }
gst-rtp = { workspace = true, features = ["v1_22"] }
gst-utils.workspace = true
gst-base.workspace = true
uuid = { version = "1", features = ["v4"] }

anyhow = "1"
chrono = "0.4"
thiserror = "2"
futures = "0.3"
itertools = "0.14"
tokio = { version = "1", features = ["fs", "macros", "rt-multi-thread", "time"] }
tokio-stream = "0.1.11"
async-tungstenite = { version = "0.31", features = ["tokio-runtime", "tokio-rustls-native-certs", "url"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
fastrand = "2.0"
gst_plugin_webrtc_protocol = { path="protocol", package = "gst-plugin-webrtc-signalling-protocol", version = "0.14" }
gst_plugin_webrtc_signalling = { path="signalling", package = "gst-plugin-webrtc-signalling", version = "0.14" }
human_bytes = "0.4"
rand = "0.9"
url = "2"
tokio-rustls = { version = "0.26", default-features = false, features = ["logging", "tls12", "ring"] }
rustls-pemfile = "2"
rustls-pki-types = "1"

aws-config = { version = "1.0", default-features = false, features = ["credentials-process", "rt-tokio"], optional = true }
aws-sdk-sso = { version = "1.0", default-features = false, features = ["rt-tokio", "rustls"], optional = true }
aws-sdk-sts = { version = "1.0", default-features = false, features = ["rt-tokio", "rustls"], optional = true }
aws-types = { version = "1.0", optional = true }
aws-credential-types = { version = "1.0", optional = true }
aws-sigv4 = { version = "1.0", optional = true }
aws-smithy-http = { version = "0.62", features = [ "rt-tokio" ], optional = true }
aws-smithy-http-client = { version = "1.1.1", default-features = false, features = ["hyper-014", "legacy-rustls-ring"], optional = true }
aws-smithy-types = { version = "1.0", optional = true }
aws-sdk-kinesisvideo = { version =  "1.0", optional = true, default-features = false, features = ["rt-tokio", "rustls"] }
aws-sdk-kinesisvideosignaling = { version = "1.0", optional = true, default-features = false, features = ["rt-tokio", "rustls"] }
http = { version = "1.0", optional = true }
data-encoding = {version = "2.3.3", optional = true }
url-escape = { version = "0.1.1", optional = true }
reqwest = { version = "0.12", default-features = false, features = ["charset", "http2", "system-proxy", "rustls-tls", "rustls-tls-native-roots"], optional = true }
rustls = { version = "0.23", default-features = false, features = ["std", "ring"] }
parse_link_header = {version = "0.4", features = ["url"]}
async-recursion = { version = "1.0.0", optional = true }

livekit-protocol = { version = "0.3, < 0.3.4", optional = true }
livekit-api = { version = "0.3", default-features = false, features = ["signal-client", "access-token", "native-tls"], optional = true }

warp = {version = "0.4", optional = true, features = ["server"] }
ctrlc = {version = "3.4.0", optional = true }
hyper-util = { version = "0.1", features = ["server", "http2"]}

tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tracing-log = "0.2"

bytes = "1"

[dev-dependencies]
gst-plugin-rtp = { path = "../rtp" }
tokio = { version = "1", features = ["signal"] }
clap = { version = "4", features = ["derive"] }
regex = "1"

[lib]
name = "gstrswebrtc"
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"

[build-dependencies]
gst-plugin-version-helper.workspace = true

[features]
default = ["janus", "whip", "web_server"]
static = []
capi = []
doc = []

aws = ["dep:aws-config", "dep:aws-types", "dep:aws-credential-types", "dep:aws-sigv4",
       "dep:aws-smithy-http", "dep:aws-smithy-types", "dep:aws-sdk-kinesisvideo",
       "dep:aws-sdk-kinesisvideosignaling", "dep:data-encoding", "dep:http", "dep:url-escape", "dep:aws-smithy-http-client",
       "dep:aws-sdk-sso", "dep:aws-sdk-sts"]
janus = ["dep:http"]
livekit = ["dep:livekit-protocol", "dep:livekit-api"]
whip = ["dep:async-recursion", "dep:reqwest", "dep:warp", "dep:ctrlc"]
web_server = ["dep:warp"]

[package.metadata.capi]
min_version = "0.9.21"

[package.metadata.capi.header]
enabled = false

[package.metadata.capi.library]
install_subdir = "gstreamer-1.0"
versioning = false
import_library = false

[package.metadata.capi.pkg_config]
requires_private = "gstreamer-rtp-1.0 >= 1.20, gstreamer-webrtc-1.0 >= 1.20, gstreamer-1.0 >= 1.20, gstreamer-app-1.0 >= 1.20, gstreamer-video-1.0 >= 1.20, gstreamer-sdp-1.0 >= 1.20, gobject-2.0, glib-2.0, gmodule-2.0"

[[example]]
name = "webrtcsink-stats-server"

[[example]]
name = "webrtcsink-high-quality-tune"

[[example]]
name = "webrtcsink-custom-signaller"

[[example]]
name = "webrtc-precise-sync-send"

[[example]]
name = "webrtc-precise-sync-recv"

[[example]]
name = "whipserver"
required-features = [ "whip" ]

[[example]]
name = "webrtcsink-define-encoder-bitrates"

[[example]]
name = "whipclient"
required-features = [ "whip" ]

[[example]]
name = "stream-selector-server"

[[example]]
name = "stream-selector-client"

[package.metadata.gstreamer]
release_date = "2025-10-31"
